#include "shaders.hpp"

const char* SHADER_default_vert = "\n"
"#version 410 core\n"
"layout (location = 0) in vec3 aPos;\n"
"layout (location = 1) in vec3 aNormal;\n"
"out vec3 FragPos;\n"
"out vec3 Normal;\n"
"uniform mat4 model;\n"
"uniform mat4 view;\n"
"uniform mat4 projection;\n"
"void main()\n"
"{\n"
"FragPos = vec3(model * vec4(aPos, 1.0));\n"
"Normal = aNormal;  \n"
"gl_Position = projection * view * vec4(FragPos, 1.0);\n"
"}";

const char* SHADER_tutorial_vert = "#version 410 core\n"
"layout (location = 0) in vec3 aPos;\n"
"layout (location = 1) in vec3 aColor;\n"
"layout (location = 2) in vec2 aTexCoord;\n"
"out vec3 ourColor;\n"
"out vec2 TexCoord;\n"
"uniform mat4 transform;\n"
"uniform mat4 model;\n"
"uniform mat4 view;\n"
"uniform mat4 projection;\n"
"void main()\n"
"{\n"
"gl_Position = projection * view * model  * vec4(aPos, 1.0);\n"
"ourColor = aColor;\n"
"TexCoord = aTexCoord;\n"
"}";

const char* SHADER_tutorial_frag = "#version 410 core\n"
"out vec4 FragColor;\n"
"in vec3 ourColor;\n"
"in vec2 TexCoord;\n"
"uniform sampler2D texture0;\n"
"uniform sampler2D texture1;\n"
"void main()\n"
"{\n"
"FragColor = mix(texture(texture0, TexCoord), texture(texture1, TexCoord), 0.2);\n"
"}";

const char* SHADER_default_frag = "\n"
"#version 410 core\n"
"out vec4 FragColor;\n"
"in vec3 Normal;  \n"
"in vec3 FragPos;  \n"
"vec3 lightPos = vec3(2, 3, 2); \n"
"vec3 lightColor = vec3(1, 1, 1);\n"
"vec3 objectColor = vec3(1, 1, 1);\n"
"void main()\n"
"{\n"
"float ambientStrength = 0.2;\n"
"vec3 ambient = ambientStrength * lightColor;\n"
"vec3 norm = normalize(Normal);\n"
"vec3 lightDir = normalize(lightPos - FragPos);\n"
"float diff = max(dot(norm, lightDir), 0.0);\n"
"vec3 diffuse = diff * lightColor;\n"
"vec3 result = (ambient + diffuse) * objectColor;\n"
"FragColor = vec4(result, 1.0);\n"
"} ";

